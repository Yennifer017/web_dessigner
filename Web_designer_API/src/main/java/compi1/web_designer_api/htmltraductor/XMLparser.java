
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package compi1.web_designer_api.htmltraductor;

import java_cup.runtime.*;
import java.util.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class XMLparser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public XMLparser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public XMLparser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public XMLparser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\171\000\002\002\004\000\002\002\005\000\002\003" +
    "\004\000\002\004\005\000\002\005\005\000\002\006\006" +
    "\000\002\007\003\000\002\007\003\000\002\007\003\000" +
    "\002\007\003\000\002\007\003\000\002\007\003\000\002" +
    "\010\003\000\002\010\003\000\002\011\003\000\002\011" +
    "\003\000\002\012\006\000\002\012\006\000\002\013\006" +
    "\000\002\014\006\000\002\015\006\000\002\016\006\000" +
    "\002\017\006\000\002\020\003\000\002\020\003\000\002" +
    "\020\003\000\002\020\003\000\002\020\003\000\002\021" +
    "\007\000\002\022\004\000\002\023\005\000\002\024\004" +
    "\000\002\024\002\000\002\025\003\000\002\025\002\000" +
    "\002\026\006\000\002\027\013\000\002\027\002\000\002" +
    "\030\004\000\002\031\005\000\002\102\005\000\002\103" +
    "\006\000\002\032\006\000\002\033\003\000\002\033\003" +
    "\000\002\033\003\000\002\033\003\000\002\034\006\000" +
    "\002\035\006\000\002\036\006\000\002\037\003\000\002" +
    "\037\003\000\002\040\006\000\002\041\006\000\002\042" +
    "\004\000\002\042\002\000\002\043\003\000\002\043\002" +
    "\000\002\044\006\000\002\045\004\000\002\045\002\000" +
    "\002\046\005\000\002\046\005\000\002\046\005\000\002" +
    "\046\005\000\002\046\005\000\002\046\005\000\002\046" +
    "\002\000\002\047\004\000\002\050\003\000\002\050\003" +
    "\000\002\051\011\000\002\052\004\000\002\052\002\000" +
    "\002\053\004\000\002\054\012\000\002\055\003\000\002" +
    "\055\003\000\002\055\003\000\002\055\003\000\002\055" +
    "\003\000\002\055\003\000\002\055\003\000\002\055\003" +
    "\000\002\056\010\000\002\057\004\000\002\057\002\000" +
    "\002\060\005\000\002\060\005\000\002\061\012\000\002" +
    "\062\013\000\002\063\004\000\002\063\002\000\002\064" +
    "\005\000\002\064\005\000\002\064\005\000\002\064\005" +
    "\000\002\064\005\000\002\065\012\000\002\066\012\000" +
    "\002\067\004\000\002\067\002\000\002\070\005\000\002" +
    "\070\005\000\002\071\012\000\002\072\004\000\002\072" +
    "\002\000\002\073\005\000\002\073\005\000\002\073\005" +
    "\000\002\074\010\000\002\075\004\000\002\075\002\000" +
    "\002\076\005\000\002\076\005\000\002\077\012\000\002" +
    "\100\004\000\002\100\002\000\002\101\005\000\002\101" +
    "\005\000\002\101\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0137\000\004\060\005\001\002\000\004\002\u0139\001" +
    "\002\000\006\004\006\005\011\001\002\000\004\012\025" +
    "\001\002\000\004\002\uffbb\001\002\000\004\002\uffbc\001" +
    "\002\000\004\062\013\001\002\000\004\002\uffbd\001\002" +
    "\000\004\060\014\001\002\000\006\004\006\061\uffb8\001" +
    "\002\000\004\061\022\001\002\000\004\060\017\001\002" +
    "\000\006\004\006\061\uffb8\001\002\000\004\061\uffb9\001" +
    "\002\000\004\061\uffb7\001\002\000\004\005\023\001\002" +
    "\000\004\062\024\001\002\000\004\002\uffba\001\002\000" +
    "\004\063\026\001\002\000\022\016\042\017\044\020\040" +
    "\021\031\022\037\023\036\024\033\025\027\001\002\000" +
    "\004\062\u012c\001\002\000\004\060\uffb2\001\002\000\004" +
    "\062\u0125\001\002\000\004\060\u0121\001\002\000\004\062" +
    "\364\001\002\000\004\060\uffb5\001\002\000\004\060\uffb1" +
    "\001\002\000\004\062\314\001\002\000\004\062\272\001" +
    "\002\000\004\062\263\001\002\000\004\060\uffaf\001\002" +
    "\000\004\062\112\001\002\000\004\060\uffb4\001\002\000" +
    "\004\062\050\001\002\000\004\060\uffb3\001\002\000\004" +
    "\060\uffb0\001\002\000\004\060\uffae\001\002\000\004\060" +
    "\052\001\002\000\004\060\055\001\002\000\004\014\053" +
    "\001\002\000\004\062\054\001\002\000\004\060\000\001" +
    "\002\000\006\013\056\061\uff91\001\002\000\004\012\110" +
    "\001\002\000\006\031\066\033\071\001\002\000\004\061" +
    "\061\001\002\000\004\014\063\001\002\000\004\060\uff93" +
    "\001\002\000\004\062\064\001\002\000\010\007\ufffe\011" +
    "\ufffe\060\ufffe\001\002\000\004\060\106\001\002\000\004" +
    "\062\103\001\002\000\004\060\101\001\002\000\004\061" +
    "\uff92\001\002\000\004\062\072\001\002\000\004\065\073" +
    "\001\002\000\004\060\075\001\002\000\004\060\uffeb\001" +
    "\002\000\004\061\076\001\002\000\004\013\077\001\002" +
    "\000\004\062\100\001\002\000\004\060\ufffc\001\002\000" +
    "\006\013\056\061\uff91\001\002\000\004\061\uff90\001\002" +
    "\000\004\065\104\001\002\000\004\060\075\001\002\000" +
    "\004\060\uffef\001\002\000\006\013\056\061\uff91\001\002" +
    "\000\004\061\uff8f\001\002\000\004\063\111\001\002\000" +
    "\030\013\ufffd\026\ufffd\027\ufffd\030\ufffd\031\ufffd\032\ufffd" +
    "\033\ufffd\034\ufffd\035\ufffd\036\ufffd\037\ufffd\001\002\000" +
    "\004\060\113\001\002\000\006\007\116\014\uffca\001\002" +
    "\000\004\060\262\001\002\000\004\014\227\001\002\000" +
    "\004\062\225\001\002\000\004\060\120\001\002\000\006" +
    "\006\123\061\uffc5\001\002\000\022\040\146\041\140\042" +
    "\135\043\132\044\143\045\136\046\137\061\uffbe\001\002" +
    "\000\004\061\126\001\002\000\004\012\124\001\002\000" +
    "\004\063\125\001\002\000\022\040\uffd9\041\uffd9\042\uffd9" +
    "\043\uffd9\044\uffd9\045\uffd9\046\uffd9\061\uffd9\001\002\000" +
    "\004\007\130\001\002\000\004\060\uffc7\001\002\000\004" +
    "\062\131\001\002\000\004\060\uffda\001\002\000\004\062" +
    "\222\001\002\000\004\060\220\001\002\000\004\060\216" +
    "\001\002\000\004\062\uffce\001\002\000\004\062\213\001" +
    "\002\000\004\062\202\001\002\000\004\062\uffcf\001\002" +
    "\000\004\062\177\001\002\000\004\060\175\001\002\000" +
    "\004\062\172\001\002\000\004\060\170\001\002\000\004" +
    "\060\166\001\002\000\004\062\153\001\002\000\004\060" +
    "\151\001\002\000\004\061\uffc6\001\002\000\006\006\123" +
    "\061\uffc5\001\002\000\004\061\uffc2\001\002\000\012\054" +
    "\155\055\154\056\156\057\157\001\002\000\004\060\uffd4" +
    "\001\002\000\004\060\uffd6\001\002\000\004\060\uffd5\001" +
    "\002\000\004\060\uffd3\001\002\000\004\060\162\001\002" +
    "\000\004\060\uffd2\001\002\000\004\061\163\001\002\000" +
    "\004\006\164\001\002\000\004\062\165\001\002\000\004" +
    "\060\uffd8\001\002\000\006\006\123\061\uffc5\001\002\000" +
    "\004\061\uffc3\001\002\000\006\006\123\061\uffc5\001\002" +
    "\000\004\061\uffc1\001\002\000\004\067\173\001\002\000" +
    "\004\060\162\001\002\000\004\060\uffcc\001\002\000\006" +
    "\006\123\061\uffc5\001\002\000\004\061\uffc0\001\002\000" +
    "\004\066\200\001\002\000\004\060\162\001\002\000\004" +
    "\060\uffcd\001\002\000\024\043\204\054\155\055\154\056" +
    "\156\057\157\064\211\065\207\066\205\067\203\001\002" +
    "\000\004\060\ufff7\001\002\000\004\060\ufff9\001\002\000" +
    "\004\060\ufff8\001\002\000\004\060\162\001\002\000\004" +
    "\060\ufffa\001\002\000\004\060\ufff6\001\002\000\004\060" +
    "\ufffb\001\002\000\004\060\uffd7\001\002\000\004\067\214" +
    "\001\002\000\004\060\162\001\002\000\004\060\uffd0\001" +
    "\002\000\006\006\123\061\uffc5\001\002\000\004\061\uffbf" +
    "\001\002\000\006\006\123\061\uffc5\001\002\000\004\061" +
    "\uffc4\001\002\000\004\070\223\001\002\000\004\060\162" +
    "\001\002\000\004\060\uffd1\001\002\000\004\060\uffdb\001" +
    "\002\000\006\013\056\061\uff97\001\002\000\004\062\230" +
    "\001\002\000\010\013\uffff\060\uffff\061\uffff\001\002\000" +
    "\010\013\056\031\066\033\071\001\002\000\004\061\061" +
    "\001\002\000\006\007\116\060\uffc8\001\002\000\004\060" +
    "\uffc9\001\002\000\004\060\uff99\001\002\000\004\060\260" +
    "\001\002\000\004\060\256\001\002\000\004\060\254\001" +
    "\002\000\004\026\243\001\002\000\004\061\uff98\001\002" +
    "\000\004\062\244\001\002\000\014\047\247\050\252\051" +
    "\246\052\251\053\245\001\002\000\004\060\uffe6\001\002" +
    "\000\004\060\uffe8\001\002\000\004\060\uffea\001\002\000" +
    "\004\060\075\001\002\000\004\060\uffe7\001\002\000\004" +
    "\060\uffe9\001\002\000\004\060\uffe5\001\002\000\006\013" +
    "\056\061\uff97\001\002\000\004\061\uff96\001\002\000\006" +
    "\013\056\061\uff97\001\002\000\004\061\uff94\001\002\000" +
    "\006\013\056\061\uff97\001\002\000\004\061\uff95\001\002" +
    "\000\004\014\uffcb\001\002\000\004\060\052\001\002\000" +
    "\004\060\265\001\002\000\004\013\056\001\002\000\004" +
    "\031\066\001\002\000\004\060\270\001\002\000\004\061" +
    "\061\001\002\000\004\060\uff9f\001\002\000\004\060\273" +
    "\001\002\000\006\007\116\014\uffca\001\002\000\004\014" +
    "\227\001\002\000\006\013\056\061\uff8c\001\002\000\004" +
    "\061\061\001\002\000\010\013\056\031\066\033\071\001" +
    "\002\000\004\060\310\001\002\000\004\061\uff8d\001\002" +
    "\000\004\060\306\001\002\000\004\060\304\001\002\000" +
    "\006\013\056\061\uff8c\001\002\000\004\061\uff8b\001\002" +
    "\000\006\013\056\061\uff8c\001\002\000\004\061\uff89\001" +
    "\002\000\006\013\056\061\uff8c\001\002\000\004\061\uff8a" +
    "\001\002\000\006\007\116\060\uffc8\001\002\000\004\060" +
    "\uff8e\001\002\000\004\060\315\001\002\000\006\011\320" +
    "\014\uffe1\001\002\000\004\060\345\001\002\000\004\014" +
    "\227\001\002\000\004\062\323\001\002\000\004\060\322" +
    "\001\002\000\004\014\uffe2\001\002\000\004\060\uffe4\001" +
    "\002\000\006\013\056\061\uff9c\001\002\000\004\061\061" +
    "\001\002\000\006\031\066\035\327\001\002\000\004\062" +
    "\337\001\002\000\004\060\335\001\002\000\004\060\333" +
    "\001\002\000\004\061\uff9d\001\002\000\006\013\056\061" +
    "\uff9c\001\002\000\004\061\uff9b\001\002\000\006\013\056" +
    "\061\uff9c\001\002\000\004\061\uff9a\001\002\000\024\043" +
    "\204\054\155\055\154\056\156\057\157\064\211\065\207" +
    "\066\205\067\203\001\002\000\004\060\075\001\002\000" +
    "\004\060\uffee\001\002\000\006\011\320\060\uffdf\001\002" +
    "\000\004\060\uff9e\001\002\000\004\060\uffe0\001\002\000" +
    "\006\060\347\061\uffdc\001\002\000\004\061\360\001\002" +
    "\000\004\010\350\001\002\000\004\015\351\001\002\000" +
    "\004\063\352\001\002\000\004\031\353\001\002\000\004" +
    "\061\354\001\002\000\004\062\355\001\002\000\004\060" +
    "\356\001\002\000\006\060\347\061\uffdc\001\002\000\004" +
    "\061\uffdd\001\002\000\004\011\362\001\002\000\004\060" +
    "\uffde\001\002\000\004\062\363\001\002\000\004\060\uffe3" +
    "\001\002\000\004\060\365\001\002\000\006\011\320\014" +
    "\uffe1\001\002\000\004\014\227\001\002\000\004\060\370" +
    "\001\002\000\006\013\056\061\uffa5\001\002\000\022\027" +
    "\u0108\030\u0102\031\066\032\u0101\034\u0100\035\327\036\377" +
    "\037\u010a\001\002\000\004\061\061\001\002\000\006\011" +
    "\320\060\uffdf\001\002\000\004\060\uffa7\001\002\000\004" +
    "\060\u011f\001\002\000\004\061\uffa6\001\002\000\004\062" +
    "\ufff5\001\002\000\004\062\u011c\001\002\000\004\062\u0119" +
    "\001\002\000\004\062\ufff2\001\002\000\004\062\u0116\001" +
    "\002\000\004\060\u0114\001\002\000\004\060\u0112\001\002" +
    "\000\004\062\u010f\001\002\000\004\060\u010d\001\002\000" +
    "\004\062\ufff3\001\002\000\004\060\u010b\001\002\000\004" +
    "\062\ufff4\001\002\000\006\013\056\061\uffa5\001\002\000" +
    "\004\061\uffa0\001\002\000\006\013\056\061\uffa5\001\002" +
    "\000\004\061\uffa3\001\002\000\004\065\u0110\001\002\000" +
    "\004\060\075\001\002\000\004\060\ufff1\001\002\000\006" +
    "\013\056\061\uffa5\001\002\000\004\061\uffa1\001\002\000" +
    "\006\013\056\061\uffa5\001\002\000\004\061\uffa4\001\002" +
    "\000\004\064\u0117\001\002\000\004\060\075\001\002\000" +
    "\004\060\ufff0\001\002\000\004\065\u011a\001\002\000\004" +
    "\060\075\001\002\000\004\060\uffec\001\002\000\004\065" +
    "\u011d\001\002\000\004\060\075\001\002\000\004\060\uffed" +
    "\001\002\000\006\013\056\061\uffa5\001\002\000\004\061" +
    "\uffa2\001\002\000\004\061\u0122\001\002\000\004\004\u0123" +
    "\001\002\000\004\062\u0124\001\002\000\006\002\uffb6\060" +
    "\uffb6\001\002\000\004\060\052\001\002\000\004\060\u0127" +
    "\001\002\000\004\013\056\001\002\000\004\031\066\001" +
    "\002\000\004\060\u012a\001\002\000\004\061\061\001\002" +
    "\000\004\060\uffa8\001\002\000\004\060\052\001\002\000" +
    "\004\060\u012e\001\002\000\006\013\056\061\uffab\001\002" +
    "\000\004\061\061\001\002\000\014\027\u0108\030\u0102\031" +
    "\066\036\377\037\u010a\001\002\000\004\060\u0136\001\002" +
    "\000\004\060\u0134\001\002\000\004\061\uffac\001\002\000" +
    "\006\013\056\061\uffab\001\002\000\004\061\uffa9\001\002" +
    "\000\006\013\056\061\uffab\001\002\000\004\061\uffaa\001" +
    "\002\000\004\060\uffad\001\002\000\004\002\001\001\002" +
    "" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0137\000\004\047\003\001\001\000\002\001\001\000" +
    "\010\050\011\051\007\054\006\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\052\014\054\015" +
    "\001\001\000\002\001\001\000\004\053\017\001\001\000" +
    "\006\052\020\054\015\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\024\055\031\056\033\061\042" +
    "\062\044\065\027\066\034\071\045\074\040\077\046\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\002\050\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\005\056\075\057\001\001\000\002\001\001\000" +
    "\010\013\066\017\064\076\067\001\001\000\004\004\061" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\006\073\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\005\056\075\101\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\006\104\001\001\000" +
    "\002\001\001\000\006\005\056\075\106\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\030\116\042\114\044\113\001\001\000\002" +
    "\001\001\000\004\003\225\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\045\121\102\120\001\001\000\022" +
    "\032\132\034\144\035\146\036\143\037\140\040\141\041" +
    "\133\046\147\001\001\000\004\031\126\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\045\151\102" +
    "\120\001\001\000\002\001\001\000\004\033\157\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\103\160\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\045\166\102\120\001\001\000\002" +
    "\001\001\000\006\045\170\102\120\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\103\173\001\001\000\002" +
    "\001\001\000\006\045\175\102\120\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\103\200\001\001\000\002" +
    "\001\001\000\006\007\205\033\207\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\103\211" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\103\214" +
    "\001\001\000\002\001\001\000\006\045\216\102\120\001" +
    "\001\000\002\001\001\000\006\045\220\102\120\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\103\223\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\005\230" +
    "\072\231\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\005\240\013\237\017\235\021\236\073\241\001\001" +
    "\000\004\004\232\001\001\000\010\030\116\043\234\044" +
    "\233\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\020\247" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\006\252\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\005\230\072\254\001" +
    "\001\000\002\001\001\000\006\005\230\072\256\001\001" +
    "\000\002\001\001\000\006\005\230\072\260\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\002\263\001\001" +
    "\000\002\001\001\000\004\005\265\001\001\000\004\013" +
    "\266\001\001\000\002\001\001\000\004\004\270\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\030\116\042" +
    "\273\044\113\001\001\000\004\003\274\001\001\000\006" +
    "\005\276\100\275\001\001\000\004\004\311\001\001\000" +
    "\014\005\240\013\302\017\277\021\301\101\300\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\005\276\100\304\001\001\000\002" +
    "\001\001\000\006\005\276\100\306\001\001\000\002\001" +
    "\001\000\006\005\276\100\310\001\001\000\002\001\001" +
    "\000\010\030\116\043\312\044\233\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\022\315\024\316\026\320" +
    "\001\001\000\002\001\001\000\004\003\323\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\005\325\067\324\001\001\000\004\004" +
    "\341\001\001\000\010\013\330\014\327\070\331\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\005\325\067\333\001\001\000\002" +
    "\001\001\000\006\005\325\067\335\001\001\000\002\001" +
    "\001\000\006\007\337\033\207\001\001\000\004\006\340" +
    "\001\001\000\002\001\001\000\010\022\315\025\342\026" +
    "\343\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\027\345\001\001\000\004\023\360\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\027\356\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\022\315\024\365\026\320\001\001" +
    "\000\004\003\366\001\001\000\002\001\001\000\006\005" +
    "\370\063\371\001\001\000\022\010\u0105\011\u0102\012\u0108" +
    "\013\u0103\014\u0106\015\374\016\u0104\064\375\001\001\000" +
    "\004\004\372\001\001\000\010\022\315\025\373\026\343" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\005" +
    "\370\063\u010b\001\001\000\002\001\001\000\006\005\370" +
    "\063\u010d\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\006\u0110\001\001\000\002\001\001\000\006\005\370" +
    "\063\u0112\001\001\000\002\001\001\000\006\005\370\063" +
    "\u0114\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\006\u0117\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\006\u011a\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\006\u011d\001\001\000\002\001\001\000\006\005" +
    "\370\063\u011f\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\002\u0125\001\001\000\002\001\001\000\004\005\u0127" +
    "\001\001\000\004\013\u0128\001\001\000\002\001\001\000" +
    "\004\004\u012a\001\001\000\002\001\001\000\004\002\u012c" +
    "\001\001\000\002\001\001\000\006\005\u012f\057\u012e\001" +
    "\001\000\004\004\u0137\001\001\000\014\010\u0105\011\u0102" +
    "\012\u0131\013\u0130\060\u0132\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\005\u012f\057\u0134" +
    "\001\001\000\002\001\001\000\006\005\u012f\057\u0136\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$XMLparser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$XMLparser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$XMLparser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    //fields
    Lexer lex;
    private List<String> syntaxErrors;


    //conect the parser with the lexer
    public parser(Lexer lex){
        super(lex);
        syntaxErrors = new LinkedList<>();
    }

    //getters
    public Lexer getLexer(){
        return this.lex;
    }
    public List<String> getSyntaxErrors(){
        return this.syntaxErrors;
    }
    
    /*----------------------------------------------------
            SOBREESCRIBIENDO LOS METODOS DE ERROR
    ------------------------------------------------------*/
    public void syntax_error(Symbol cur_token) {
        String mss = "Simbolo: " + symbl_name_from_id(cur_token.sym)
                    + ", linea: " + cur_token.left
                    + ", columna: " + cur_token.right;
        if (expected_token_ids().isEmpty()) {
            mss += " -- ya no se esperaba ningun simbolo";
        }
        syntaxErrors.add(mss);
    }

    public void unrecovered_syntax_error(Symbol cur_token) {
        syntaxErrors.add("Errores de sintaxis severos detectados, revisa municiosamente el codigo");
    }


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$XMLparser$actions {
  private final XMLparser parser;

  /** Constructor */
  CUP$XMLparser$actions(XMLparser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$XMLparser$do_action_part00000000(
    int                        CUP$XMLparser$act_num,
    java_cup.runtime.lr_parser CUP$XMLparser$parser,
    java.util.Stack            CUP$XMLparser$stack,
    int                        CUP$XMLparser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$XMLparser$result;

      /* select the action based on the action number */
      switch (CUP$XMLparser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= instruction EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)).value;
		RESULT = start_val;
              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$XMLparser$parser.done_parsing();
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // open_params ::= OPEN PARAMETROS CLOSE 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("open_params",0, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // open_params_w ::= PARAMETROS CLOSE 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("open_params_w",1, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // close_params ::= FINISHER PARAMETROS CLOSE 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("close_params",2, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // open_param ::= PARAMETRO NOMBRE EQUALS 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("open_param",3, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // close_param ::= OPEN FINISHER PARAMETRO CLOSE 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("close_param",4, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // data ::= DATE_TKN 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("data",5, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // data ::= IDENTIFIER 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("data",5, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // data ::= COLOR 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("data",5, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // data ::= INTEGER_TKN 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("data",5, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // data ::= STRING_TKN 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("data",5, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // data ::= types_align 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("data",5, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // need_id_record ::= USUARIO_CREACION 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("need_id_record",6, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // need_id_record ::= USUARIO_MODIFICACION 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("need_id_record",6, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // need_date_record ::= FECHA_CREACION 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("need_date_record",7, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // need_date_record ::= FECHA_MODIFICACION 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("need_date_record",7, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // record_params ::= need_id_record CLOSE IDENTIFIER close_param 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("record_params",8, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // record_params ::= need_date_record CLOSE DATE_TKN close_param 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("record_params",8, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // id_param ::= ID CLOSE IDENTIFIER close_param 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("id_param",9, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // title_param ::= TITULO CLOSE data close_param 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("title_param",10, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // site_param ::= SITIO CLOSE IDENTIFIER close_param 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("site_param",11, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // father_param ::= PADRE CLOSE IDENTIFIER close_param 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("father_param",12, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // page_specification_p ::= PAGINA CLOSE IDENTIFIER close_param 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("page_specification_p",13, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // name_class ::= TITULO_CLASS 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("name_class",14, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // name_class ::= PARRAFO 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("name_class",14, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // name_class ::= IMAGEN 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("name_class",14, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // name_class ::= VIDEO 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("name_class",14, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // name_class ::= MENU 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("name_class",14, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // clase_param ::= open_param CLASE CLOSE name_class close_param 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("clase_param",15, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-4)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // open_labels ::= ETIQUETAS CLOSE 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("open_labels",16, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // close_labels ::= FINISHER ETIQUETAS CLOSE 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("close_labels",17, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // optional_labels ::= labels OPEN 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("optional_labels",18, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // optional_labels ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("optional_labels",18, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // optional_labels_v2 ::= labels 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("optional_labels_v2",19, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // optional_labels_v2 ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("optional_labels_v2",19, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // labels ::= open_labels OPEN define_labels close_labels 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("labels",20, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // define_labels ::= OPEN ETIQUETA VALOR EQUALS ID FINISHER CLOSE OPEN define_labels 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("define_labels",21, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-8)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // define_labels ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("define_labels",21, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // open_attributes ::= ATRIBUTOS CLOSE 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("open_attributes",22, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // close_attributes ::= FINISHER ATRIBUTOS CLOSE 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("close_attributes",23, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // open_attr ::= ATRIBUTO NOMBRE EQUALS 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("open_attr",64, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // close_attr ::= OPEN FINISHER ATRIBUTO CLOSE 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("close_attr",65, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // text_attr ::= TEXTO CLOSE data close_attr 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("text_attr",24, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // types_align ::= CENTRAR 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("types_align",25, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // types_align ::= IZQUIERDA 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("types_align",25, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // types_align ::= DERECHA 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("types_align",25, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // types_align ::= JUSTIFICAR 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("types_align",25, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // align_attr ::= ALINEACION CLOSE types_align close_attr 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("align_attr",26, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // color_attr ::= COLOR CLOSE COLOR_HEX close_attr 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("color_attr",27, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // origin_attr ::= ORIGEN CLOSE STRING_TKN close_attr 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("origin_attr",28, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // numeric_attr_name ::= ALTURA 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("numeric_attr_name",29, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // numeric_attr_name ::= ANCHO 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("numeric_attr_name",29, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // numeric_attr ::= numeric_attr_name CLOSE INTEGER_TKN close_attr 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("numeric_attr",30, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // labels_attr ::= ETIQUETAS_MENU CLOSE STRING_TKN close_attr 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("labels_attr",31, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // optional_attributes ::= attributes OPEN 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("optional_attributes",32, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // optional_attributes ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("optional_attributes",32, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // optional_attributes_v2 ::= attributes 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("optional_attributes_v2",33, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // optional_attributes_v2 ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("optional_attributes_v2",33, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // attributes ::= open_attributes OPEN define_attributes close_attributes 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("attributes",34, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // define_attributes ::= open_attr define_attr_aux 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("define_attributes",35, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // define_attributes ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("define_attributes",35, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // define_attr_aux ::= text_attr OPEN define_attributes 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("define_attr_aux",36, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // define_attr_aux ::= align_attr OPEN define_attributes 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("define_attr_aux",36, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // define_attr_aux ::= color_attr OPEN define_attributes 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("define_attr_aux",36, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // define_attr_aux ::= origin_attr OPEN define_attributes 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("define_attr_aux",36, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // define_attr_aux ::= numeric_attr OPEN define_attributes 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("define_attr_aux",36, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // define_attr_aux ::= labels_attr OPEN define_attributes 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("define_attr_aux",36, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // define_attr_aux ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("define_attr_aux",36, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // instruction ::= OPEN instruction_aux 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("instruction",37, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // instruction_aux ::= actions_stm 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("instruction_aux",38, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // instruction_aux ::= action_specific 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("instruction_aux",38, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // actions_stm ::= ACCIONES CLOSE OPEN more_actions FINISHER ACCIONES CLOSE 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("actions_stm",39, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-6)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // more_actions ::= action_specific more_actions_aux 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("more_actions",40, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // more_actions ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("more_actions",40, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // more_actions_aux ::= OPEN more_actions 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("more_actions_aux",41, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // action_specific ::= ACCION NOMBRE EQUALS action_stm OPEN FINISHER ACCION CLOSE 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("action_specific",42, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-7)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // action_stm ::= new_site 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("action_stm",43, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // action_stm ::= delete_site 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("action_stm",43, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // action_stm ::= new_page 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("action_stm",43, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // action_stm ::= delete_page 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("action_stm",43, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // action_stm ::= modify_page 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("action_stm",43, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // action_stm ::= add_component 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("action_stm",43, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // action_stm ::= delete_component 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("action_stm",43, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // action_stm ::= modify_component 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("action_stm",43, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // new_site ::= NUEVO_SITIO_WEB CLOSE open_params OPEN params_new_site close_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("new_site",44, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-5)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // params_new_site ::= open_param params_new_site_aux 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_new_site",45, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // params_new_site ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_new_site",45, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // params_new_site_aux ::= id_param OPEN params_new_site 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_new_site_aux",46, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // params_new_site_aux ::= record_params OPEN params_new_site 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_new_site_aux",46, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // delete_site ::= BORRAR_SITIO_WEB CLOSE open_params OPEN open_param id_param OPEN close_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("delete_site",47, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-7)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // new_page ::= NUEVA_PAGINA CLOSE OPEN optional_labels open_params_w OPEN params_new_page close_params optional_labels_v2 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("new_page",48, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-8)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // params_new_page ::= open_param params_new_page_aux 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_new_page",49, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // params_new_page ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_new_page",49, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // params_new_page_aux ::= id_param OPEN params_new_page 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_new_page_aux",50, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // params_new_page_aux ::= title_param OPEN params_new_page 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_new_page_aux",50, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // params_new_page_aux ::= site_param OPEN params_new_page 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_new_page_aux",50, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // params_new_page_aux ::= father_param OPEN params_new_page 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_new_page_aux",50, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // params_new_page_aux ::= record_params OPEN params_new_page 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_new_page_aux",50, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // delete_page ::= BORRAR_PAGINA CLOSE open_params OPEN open_param id_param OPEN close_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("delete_page",51, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-7)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // modify_page ::= MODIFICAR_PAGINA CLOSE OPEN optional_labels open_params_w modify_params close_params optional_labels_v2 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("modify_page",52, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-7)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // modify_params ::= open_param modify_params_aux 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("modify_params",53, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // modify_params ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("modify_params",53, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // modify_params_aux ::= id_param OPEN modify_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("modify_params_aux",54, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // modify_params_aux ::= title_param OPEN modify_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("modify_params_aux",54, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // add_component ::= AGREGAR_COMPONENTE CLOSE OPEN optional_attributes open_params_w add_comp_params close_params optional_attributes_v2 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("add_component",55, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-7)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // add_comp_params ::= open_param add_comp_params_aux 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("add_comp_params",56, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // add_comp_params ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("add_comp_params",56, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // add_comp_params_aux ::= id_param OPEN add_comp_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("add_comp_params_aux",57, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // add_comp_params_aux ::= page_specification_p OPEN add_comp_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("add_comp_params_aux",57, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // add_comp_params_aux ::= clase_param OPEN add_comp_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("add_comp_params_aux",57, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // delete_component ::= BORRAR_COMPONENTE CLOSE open_params OPEN delete_comp_params close_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("delete_component",58, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-5)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // delete_comp_params ::= open_param delete_comp_params_aux 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("delete_comp_params",59, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // delete_comp_params ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("delete_comp_params",59, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // delete_comp_params_aux ::= id_param OPEN delete_comp_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("delete_comp_params_aux",60, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // delete_comp_params_aux ::= page_specification_p OPEN delete_comp_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("delete_comp_params_aux",60, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // modify_component ::= MODIFICAR_COMPONENTE CLOSE OPEN optional_attributes open_params_w modify_comp_params close_params optional_attributes_v2 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("modify_component",61, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-7)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // modify_comp_params ::= open_param modify_comp_params_aux 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("modify_comp_params",62, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // modify_comp_params ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("modify_comp_params",62, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // modify_comp_params_aux ::= id_param OPEN modify_comp_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("modify_comp_params_aux",63, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // modify_comp_params_aux ::= page_specification_p OPEN modify_comp_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("modify_comp_params_aux",63, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // modify_comp_params_aux ::= clase_param OPEN modify_comp_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("modify_comp_params_aux",63, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$XMLparser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$XMLparser$do_action(
    int                        CUP$XMLparser$act_num,
    java_cup.runtime.lr_parser CUP$XMLparser$parser,
    java.util.Stack            CUP$XMLparser$stack,
    int                        CUP$XMLparser$top)
    throws java.lang.Exception
    {
              return CUP$XMLparser$do_action_part00000000(
                               CUP$XMLparser$act_num,
                               CUP$XMLparser$parser,
                               CUP$XMLparser$stack,
                               CUP$XMLparser$top);
    }
}

}
