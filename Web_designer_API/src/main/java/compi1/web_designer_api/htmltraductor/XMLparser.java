
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package compi1.web_designer_api.htmltraductor;

import java_cup.runtime.*;
import java.util.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class XMLparser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public XMLparser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public XMLparser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public XMLparser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\173\000\002\002\004\000\002\002\005\000\002\003" +
    "\004\000\002\004\005\000\002\005\005\000\002\006\006" +
    "\000\002\101\006\000\002\102\005\000\002\007\003\000" +
    "\002\007\003\000\002\007\003\000\002\007\003\000\002" +
    "\007\003\000\002\007\003\000\002\007\003\000\002\010" +
    "\003\000\002\010\003\000\002\011\003\000\002\011\003" +
    "\000\002\012\006\000\002\012\006\000\002\013\006\000" +
    "\002\014\006\000\002\015\006\000\002\016\006\000\002" +
    "\025\006\000\002\023\003\000\002\023\003\000\002\023" +
    "\003\000\002\023\003\000\002\023\003\000\002\024\006" +
    "\000\002\041\004\000\002\041\002\000\002\017\011\000" +
    "\002\020\012\000\002\020\002\000\002\021\005\000\002" +
    "\075\005\000\002\076\006\000\002\022\006\000\002\026" +
    "\003\000\002\026\003\000\002\026\003\000\002\026\003" +
    "\000\002\027\006\000\002\030\006\000\002\031\006\000" +
    "\002\032\003\000\002\032\003\000\002\033\006\000\002" +
    "\034\006\000\002\103\003\000\002\103\003\000\002\035" +
    "\004\000\002\035\002\000\002\036\007\000\002\037\004" +
    "\000\002\037\002\000\002\040\005\000\002\040\005\000" +
    "\002\040\005\000\002\040\005\000\002\040\005\000\002" +
    "\040\005\000\002\040\002\000\002\042\004\000\002\043" +
    "\003\000\002\043\003\000\002\044\011\000\002\045\004" +
    "\000\002\045\002\000\002\046\004\000\002\047\006\000" +
    "\002\050\003\000\002\050\003\000\002\050\003\000\002" +
    "\050\003\000\002\050\003\000\002\050\003\000\002\050" +
    "\003\000\002\050\003\000\002\051\011\000\002\052\004" +
    "\000\002\052\002\000\002\053\005\000\002\053\005\000" +
    "\002\054\007\000\002\077\010\000\002\077\004\000\002" +
    "\055\015\000\002\056\004\000\002\056\002\000\002\057" +
    "\005\000\002\057\005\000\002\057\005\000\002\057\005" +
    "\000\002\057\005\000\002\060\007\000\002\100\010\000" +
    "\002\100\004\000\002\061\015\000\002\062\004\000\002" +
    "\062\002\000\002\063\005\000\002\063\005\000\002\064" +
    "\015\000\002\065\004\000\002\065\002\000\002\066\005" +
    "\000\002\066\005\000\002\066\005\000\002\067\011\000" +
    "\002\070\004\000\002\070\002\000\002\071\005\000\002" +
    "\071\005\000\002\072\015\000\002\073\004\000\002\073" +
    "\002\000\002\074\005\000\002\074\005\000\002\074\005" +
    "" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u014d\000\004\060\005\001\002\000\004\002\u014f\001" +
    "\002\000\006\004\006\005\011\001\002\000\004\012\025" +
    "\001\002\000\004\002\uffbd\001\002\000\004\002\uffbe\001" +
    "\002\000\004\062\013\001\002\000\004\002\uffbf\001\002" +
    "\000\004\060\014\001\002\000\006\004\006\061\uffba\001" +
    "\002\000\004\061\022\001\002\000\004\060\017\001\002" +
    "\000\006\004\006\061\uffba\001\002\000\004\061\uffbb\001" +
    "\002\000\004\061\uffb9\001\002\000\004\005\023\001\002" +
    "\000\004\062\024\001\002\000\004\002\uffbc\001\002\000" +
    "\004\063\026\001\002\000\022\016\043\017\044\020\037" +
    "\021\031\022\040\023\036\024\033\025\030\001\002\000" +
    "\006\002\uffb4\060\uffb4\001\002\000\004\062\u0141\001\002" +
    "\000\004\062\u0135\001\002\000\006\002\uffb3\060\uffb3\001" +
    "\002\000\004\062\u0106\001\002\000\006\002\uffb7\060\uffb7" +
    "\001\002\000\006\002\uffb8\060\uffb8\001\002\000\004\062" +
    "\337\001\002\000\004\062\323\001\002\000\004\062\276" +
    "\001\002\000\006\002\uffb1\060\uffb1\001\002\000\006\002" +
    "\uffb6\060\uffb6\001\002\000\004\062\117\001\002\000\004" +
    "\062\050\001\002\000\006\002\uffb5\060\uffb5\001\002\000" +
    "\006\002\uffb2\060\uffb2\001\002\000\006\002\uffb0\060\uffb0" +
    "\001\002\000\004\060\052\001\002\000\004\060\055\001" +
    "\002\000\004\014\053\001\002\000\004\062\054\001\002" +
    "\000\004\060\000\001\002\000\006\013\056\061\uff8f\001" +
    "\002\000\004\012\115\001\002\000\006\031\073\033\076" +
    "\001\002\000\004\061\061\001\002\000\004\014\070\001" +
    "\002\000\004\060\064\001\002\000\006\002\uff91\060\uff91" +
    "\001\002\000\004\061\065\001\002\000\004\004\066\001" +
    "\002\000\004\062\067\001\002\000\006\002\ufffb\060\ufffb" +
    "\001\002\000\004\062\071\001\002\000\004\060\ufffe\001" +
    "\002\000\004\060\113\001\002\000\004\062\110\001\002" +
    "\000\004\061\uff90\001\002\000\004\060\106\001\002\000" +
    "\004\062\077\001\002\000\004\065\100\001\002\000\004" +
    "\060\102\001\002\000\004\060\uffe8\001\002\000\004\061" +
    "\103\001\002\000\004\013\104\001\002\000\004\062\105" +
    "\001\002\000\004\060\ufffc\001\002\000\006\013\056\061" +
    "\uff8f\001\002\000\004\061\uff8e\001\002\000\004\065\111" +
    "\001\002\000\004\060\102\001\002\000\004\060\uffec\001" +
    "\002\000\006\013\056\061\uff8f\001\002\000\004\061\uff8d" +
    "\001\002\000\004\063\116\001\002\000\026\026\ufffd\027" +
    "\ufffd\030\ufffd\031\ufffd\032\ufffd\033\ufffd\034\ufffd\035\ufffd" +
    "\036\ufffd\037\ufffd\001\002\000\004\060\120\001\002\000" +
    "\006\007\123\014\uffca\001\002\000\004\060\275\001\002" +
    "\000\004\014\236\001\002\000\004\062\124\001\002\000" +
    "\004\060\125\001\002\000\006\006\130\061\uffc7\001\002" +
    "\000\022\040\153\041\145\042\140\043\137\044\150\045" +
    "\143\046\144\061\uffc0\001\002\000\004\061\133\001\002" +
    "\000\004\012\131\001\002\000\004\063\132\001\002\000" +
    "\022\040\uffdb\041\uffdb\042\uffdb\043\uffdb\044\uffdb\045\uffdb" +
    "\046\uffdb\061\uffdb\001\002\000\004\007\135\001\002\000" +
    "\004\060\uffc9\001\002\000\004\062\136\001\002\000\004" +
    "\060\uffdc\001\002\000\004\062\232\001\002\000\004\062" +
    "\uffd0\001\002\000\004\060\230\001\002\000\004\060\226" +
    "\001\002\000\004\062\223\001\002\000\004\062\211\001" +
    "\002\000\004\062\uffd1\001\002\000\004\062\206\001\002" +
    "\000\004\060\204\001\002\000\004\062\177\001\002\000" +
    "\004\060\175\001\002\000\004\060\173\001\002\000\004" +
    "\062\160\001\002\000\004\060\156\001\002\000\004\061" +
    "\uffc8\001\002\000\006\006\130\061\uffc7\001\002\000\004" +
    "\061\uffc4\001\002\000\012\054\162\055\161\056\163\057" +
    "\164\001\002\000\004\060\uffd6\001\002\000\004\060\uffd8" +
    "\001\002\000\004\060\uffd7\001\002\000\004\060\uffd5\001" +
    "\002\000\004\060\167\001\002\000\004\060\uffd4\001\002" +
    "\000\004\061\170\001\002\000\004\006\171\001\002\000" +
    "\004\062\172\001\002\000\004\060\uffda\001\002\000\006" +
    "\006\130\061\uffc7\001\002\000\004\061\uffc5\001\002\000" +
    "\006\006\130\061\uffc7\001\002\000\004\061\uffc3\001\002" +
    "\000\006\065\201\066\202\001\002\000\004\060\167\001" +
    "\002\000\004\060\uffcd\001\002\000\004\060\uffcc\001\002" +
    "\000\004\060\uffce\001\002\000\006\006\130\061\uffc7\001" +
    "\002\000\004\061\uffc2\001\002\000\004\067\207\001\002" +
    "\000\004\060\167\001\002\000\004\060\uffcf\001\002\000" +
    "\026\043\213\054\162\055\161\056\163\057\164\064\221" +
    "\065\217\066\214\067\216\070\212\001\002\000\004\060" +
    "\ufff5\001\002\000\004\060\ufff7\001\002\000\004\060\ufff3" +
    "\001\002\000\004\060\167\001\002\000\004\060\ufff6\001" +
    "\002\000\004\060\ufff8\001\002\000\004\060\ufff4\001\002" +
    "\000\004\060\ufff9\001\002\000\004\060\uffd9\001\002\000" +
    "\004\070\224\001\002\000\004\060\167\001\002\000\004" +
    "\060\uffd2\001\002\000\006\006\130\061\uffc7\001\002\000" +
    "\004\061\uffc6\001\002\000\006\006\130\061\uffc7\001\002" +
    "\000\004\061\uffc1\001\002\000\004\071\233\001\002\000" +
    "\004\060\167\001\002\000\004\060\uffd3\001\002\000\004" +
    "\060\240\001\002\000\004\062\237\001\002\000\004\060" +
    "\uffff\001\002\000\006\013\056\061\uff95\001\002\000\010" +
    "\026\256\031\073\033\076\001\002\000\004\061\061\001" +
    "\002\000\004\060\244\001\002\000\006\007\123\061\uffca" +
    "\001\002\000\004\061\246\001\002\000\004\004\250\001" +
    "\002\000\006\002\uff97\060\uff97\001\002\000\004\062\251" +
    "\001\002\000\006\002\ufffa\060\ufffa\001\002\000\004\060" +
    "\273\001\002\000\004\060\271\001\002\000\004\060\267" +
    "\001\002\000\004\061\uff96\001\002\000\004\062\257\001" +
    "\002\000\014\047\262\050\265\051\261\052\264\053\260" +
    "\001\002\000\004\060\uffe3\001\002\000\004\060\uffe5\001" +
    "\002\000\004\060\uffe7\001\002\000\004\060\102\001\002" +
    "\000\004\060\uffe4\001\002\000\004\060\uffe6\001\002\000" +
    "\004\060\uffe2\001\002\000\006\013\056\061\uff95\001\002" +
    "\000\004\061\uff94\001\002\000\006\013\056\061\uff95\001" +
    "\002\000\004\061\uff92\001\002\000\006\013\056\061\uff95" +
    "\001\002\000\004\061\uff93\001\002\000\006\014\uffcb\061" +
    "\uffcb\001\002\000\004\060\277\001\002\000\006\007\123" +
    "\014\uffca\001\002\000\004\014\236\001\002\000\004\060" +
    "\302\001\002\000\006\013\056\061\uff8a\001\002\000\004" +
    "\061\061\001\002\000\010\026\256\031\073\033\076\001" +
    "\002\000\004\060\315\001\002\000\004\061\uff8b\001\002" +
    "\000\004\060\313\001\002\000\004\060\311\001\002\000" +
    "\006\013\056\061\uff8a\001\002\000\004\061\uff89\001\002" +
    "\000\006\013\056\061\uff8a\001\002\000\004\061\uff87\001" +
    "\002\000\006\013\056\061\uff8a\001\002\000\004\061\uff88" +
    "\001\002\000\004\060\320\001\002\000\006\007\123\061" +
    "\uffca\001\002\000\004\061\246\001\002\000\006\002\uff8c" +
    "\060\uff8c\001\002\000\004\060\324\001\002\000\006\013" +
    "\056\014\236\001\002\000\004\060\064\001\002\000\004" +
    "\060\331\001\002\000\004\031\073\001\002\000\004\060" +
    "\uff9d\001\002\000\004\013\056\001\002\000\004\031\073" +
    "\001\002\000\004\060\334\001\002\000\004\061\061\001" +
    "\002\000\004\060\uff9e\001\002\000\006\002\uff9f\060\uff9f" +
    "\001\002\000\004\060\340\001\002\000\006\011\342\014" +
    "\uffe0\001\002\000\004\014\236\001\002\000\004\062\345" +
    "\001\002\000\004\060\344\001\002\000\006\014\uffe1\061" +
    "\uffe1\001\002\000\004\060\346\001\002\000\006\010\350" +
    "\061\uffdd\001\002\000\004\061\360\001\002\000\004\015" +
    "\351\001\002\000\004\063\352\001\002\000\004\065\353" +
    "\001\002\000\004\061\354\001\002\000\004\062\355\001" +
    "\002\000\004\060\356\001\002\000\006\010\350\061\uffdd" +
    "\001\002\000\004\061\uffde\001\002\000\004\011\361\001" +
    "\002\000\004\062\362\001\002\000\004\060\uffdf\001\002" +
    "\000\004\060\364\001\002\000\006\013\056\061\uff9a\001" +
    "\002\000\004\061\061\001\002\000\006\031\073\035\367" +
    "\001\002\000\004\062\377\001\002\000\004\060\375\001" +
    "\002\000\004\060\373\001\002\000\004\061\uff9b\001\002" +
    "\000\006\013\056\061\uff9a\001\002\000\004\061\uff99\001" +
    "\002\000\006\013\056\061\uff9a\001\002\000\004\061\uff98" +
    "\001\002\000\026\043\213\054\162\055\161\056\163\057" +
    "\164\064\221\065\217\066\214\067\216\070\212\001\002" +
    "\000\004\060\102\001\002\000\004\060\uffeb\001\002\000" +
    "\004\060\u0103\001\002\000\006\011\342\061\uffe0\001\002" +
    "\000\004\061\246\001\002\000\006\002\uff9c\060\uff9c\001" +
    "\002\000\004\060\u0107\001\002\000\006\011\342\014\uffe0" +
    "\001\002\000\004\014\236\001\002\000\004\060\u010a\001" +
    "\002\000\006\013\056\061\uffa5\001\002\000\022\027\u011c" +
    "\030\u0116\031\073\032\u0115\034\u0114\035\367\036\u0113\037" +
    "\u011e\001\002\000\004\061\061\001\002\000\004\060\u010e" +
    "\001\002\000\006\011\342\061\uffe0\001\002\000\004\061" +
    "\246\001\002\000\006\002\uffa7\060\uffa7\001\002\000\004" +
    "\060\u0133\001\002\000\004\061\uffa6\001\002\000\004\062" +
    "\ufff2\001\002\000\004\062\u0130\001\002\000\004\062\u012d" +
    "\001\002\000\004\062\uffef\001\002\000\004\062\u012a\001" +
    "\002\000\004\060\u0128\001\002\000\004\060\u0126\001\002" +
    "\000\004\062\u0123\001\002\000\004\060\u0121\001\002\000" +
    "\004\062\ufff0\001\002\000\004\060\u011f\001\002\000\004" +
    "\062\ufff1\001\002\000\006\013\056\061\uffa5\001\002\000" +
    "\004\061\uffa0\001\002\000\006\013\056\061\uffa5\001\002" +
    "\000\004\061\uffa3\001\002\000\004\065\u0124\001\002\000" +
    "\004\060\102\001\002\000\004\060\uffee\001\002\000\006" +
    "\013\056\061\uffa5\001\002\000\004\061\uffa1\001\002\000" +
    "\006\013\056\061\uffa5\001\002\000\004\061\uffa4\001\002" +
    "\000\004\064\u012b\001\002\000\004\060\102\001\002\000" +
    "\004\060\uffed\001\002\000\004\065\u012e\001\002\000\004" +
    "\060\102\001\002\000\004\060\uffe9\001\002\000\004\065" +
    "\u0131\001\002\000\004\060\102\001\002\000\004\060\uffea" +
    "\001\002\000\006\013\056\061\uffa5\001\002\000\004\061" +
    "\uffa2\001\002\000\004\060\u0136\001\002\000\006\013\056" +
    "\014\236\001\002\000\004\060\064\001\002\000\004\060" +
    "\u013b\001\002\000\004\031\073\001\002\000\004\060\uffa8" +
    "\001\002\000\004\013\056\001\002\000\004\031\073\001" +
    "\002\000\004\060\u013e\001\002\000\004\061\061\001\002" +
    "\000\004\060\uffa9\001\002\000\006\002\uffaa\060\uffaa\001" +
    "\002\000\004\060\052\001\002\000\004\060\u0143\001\002" +
    "\000\006\013\056\061\uffad\001\002\000\004\061\061\001" +
    "\002\000\014\027\u011c\030\u0116\031\073\036\u0113\037\u011e" +
    "\001\002\000\004\060\u014b\001\002\000\004\060\u0149\001" +
    "\002\000\004\061\uffae\001\002\000\006\013\056\061\uffad" +
    "\001\002\000\004\061\uffab\001\002\000\006\013\056\061" +
    "\uffad\001\002\000\004\061\uffac\001\002\000\004\060\064" +
    "\001\002\000\006\002\uffaf\060\uffaf\001\002\000\004\002" +
    "\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u014d\000\004\042\003\001\001\000\002\001\001\000" +
    "\010\043\011\044\007\047\006\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\045\014\047\015" +
    "\001\001\000\002\001\001\000\004\046\017\001\001\000" +
    "\006\045\020\047\015\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\024\050\034\051\033\054\041" +
    "\055\044\060\026\061\031\064\045\067\040\072\046\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\002\050\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\005\056\070\057\001\001\000\002\001\001\000" +
    "\010\013\074\025\071\071\073\001\001\000\004\004\061" +
    "\001\001\000\002\001\001\000\004\101\062\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\006\100\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\005\056\070\106\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\006\111\001\001\000\002\001\001\000" +
    "\006\005\056\070\113\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\035" +
    "\121\036\120\001\001\000\002\001\001\000\004\003\234" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\037" +
    "\126\075\125\001\001\000\022\022\141\027\151\030\153" +
    "\031\150\032\145\033\146\034\140\040\154\001\001\000" +
    "\004\021\133\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\037\156\075\125\001\001\000\002\001" +
    "\001\000\004\026\164\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\076" +
    "\165\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\037" +
    "\173\075\125\001\001\000\002\001\001\000\006\037\175" +
    "\075\125\001\001\000\002\001\001\000\004\103\177\001" +
    "\001\000\004\076\202\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\037\204\075\125\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\076\207" +
    "\001\001\000\002\001\001\000\006\007\214\026\217\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\076\221\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\076\224\001\001\000\002\001" +
    "\001\000\006\037\226\075\125\001\001\000\002\001\001" +
    "\000\006\037\230\075\125\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\076\233\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\005\240\065\241\001\001\000\012\013\253\024\252" +
    "\025\251\066\254\001\001\000\004\004\242\001\001\000" +
    "\002\001\001\000\006\035\244\036\120\001\001\000\004" +
    "\102\246\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\023\262\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\006\265\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\005\240\065\267\001\001\000\002\001\001\000\006\005" +
    "\240\065\271\001\001\000\002\001\001\000\006\005\240" +
    "\065\273\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\035\277\036\120\001\001\000\004" +
    "\003\300\001\001\000\002\001\001\000\006\005\303\073" +
    "\302\001\001\000\004\004\316\001\001\000\012\013\307" +
    "\024\306\025\304\074\305\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\005\303\073\311\001\001\000\002\001\001\000\006\005" +
    "\303\073\313\001\001\000\002\001\001\000\006\005\303" +
    "\073\315\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\035\320\036\120\001\001\000\004\102\321\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\003\325\005" +
    "\326\100\324\001\001\000\004\101\335\001\001\000\002" +
    "\001\001\000\004\013\327\001\001\000\002\001\001\000" +
    "\004\005\331\001\001\000\004\013\332\001\001\000\002" +
    "\001\001\000\004\004\334\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\017\342\041\340" +
    "\001\001\000\004\003\362\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\020\346\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\020\356\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\005\365\062\364\001" +
    "\001\000\004\004\u0101\001\001\000\010\013\370\014\367" +
    "\063\371\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\005\365\062\373" +
    "\001\001\000\002\001\001\000\006\005\365\062\375\001" +
    "\001\000\002\001\001\000\006\007\377\026\217\001\001" +
    "\000\004\006\u0100\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\017\342\041\u0103\001\001\000\004\102\u0104" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\017" +
    "\342\041\u0107\001\001\000\004\003\u0108\001\001\000\002" +
    "\001\001\000\006\005\u010a\056\u010b\001\001\000\022\010" +
    "\u0119\011\u0116\012\u011c\013\u0117\014\u011a\015\u0110\016\u0118" +
    "\057\u0111\001\001\000\004\004\u010c\001\001\000\002\001" +
    "\001\000\006\017\342\041\u010e\001\001\000\004\102\u010f" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\005" +
    "\u010a\056\u011f\001\001\000\002\001\001\000\006\005\u010a" +
    "\056\u0121\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\006\u0124\001\001\000\002\001\001\000\006\005\u010a" +
    "\056\u0126\001\001\000\002\001\001\000\006\005\u010a\056" +
    "\u0128\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\006\u012b\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\006\u012e\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\006\u0131\001\001\000\002\001\001\000\006\005" +
    "\u010a\056\u0133\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\003\u0137\005\u0138\077\u0136\001\001\000\004\101" +
    "\u013f\001\001\000\002\001\001\000\004\013\u0139\001\001" +
    "\000\002\001\001\000\004\005\u013b\001\001\000\004\013" +
    "\u013c\001\001\000\002\001\001\000\004\004\u013e\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\002\u0141\001" +
    "\001\000\002\001\001\000\006\005\u0144\052\u0143\001\001" +
    "\000\004\004\u014c\001\001\000\014\010\u0119\011\u0116\012" +
    "\u0146\013\u0145\053\u0147\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\005\u0144\052\u0149\001" +
    "\001\000\002\001\001\000\006\005\u0144\052\u014b\001\001" +
    "\000\002\001\001\000\004\101\u014d\001\001\000\002\001" +
    "\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$XMLparser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$XMLparser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$XMLparser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    //fields
    XMLlexer lex;
    private List<String> syntaxErrors;


    //conect the parser with the lexer
    public XMLparser(XMLlexer lex){
        super(lex);
        syntaxErrors = new LinkedList<>();
    }

    //getters
    public XMLlexer getLexer(){
        return this.lex;
    }
    public List<String> getSyntaxErrors(){
        return this.syntaxErrors;
    }
    
    /*----------------------------------------------------
            SOBREESCRIBIENDO LOS METODOS DE ERROR
    ------------------------------------------------------*/
    public void syntax_error(Symbol cur_token) {
        String mss = "Simbolo: " + symbl_name_from_id(cur_token.sym)
                    + ", linea: " + cur_token.left
                    + ", columna: " + cur_token.right;
        if (expected_token_ids().isEmpty()) {
            mss += " -- ya no se esperaba ningun simbolo";
        }
        syntaxErrors.add(mss);
    }

    public void unrecovered_syntax_error(Symbol cur_token) {
        syntaxErrors.add("Errores de sintaxis severos detectados, revisa municiosamente el codigo");
    }


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$XMLparser$actions {
  private final XMLparser parser;

  /** Constructor */
  CUP$XMLparser$actions(XMLparser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$XMLparser$do_action_part00000000(
    int                        CUP$XMLparser$act_num,
    java_cup.runtime.lr_parser CUP$XMLparser$parser,
    java.util.Stack            CUP$XMLparser$stack,
    int                        CUP$XMLparser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$XMLparser$result;

      /* select the action based on the action number */
      switch (CUP$XMLparser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= instruction EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)).value;
		RESULT = start_val;
              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$XMLparser$parser.done_parsing();
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // open_params ::= OPEN PARAMETROS CLOSE 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("open_params",0, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // open_params_w ::= PARAMETROS CLOSE 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("open_params_w",1, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // close_params ::= FINISHER PARAMETROS CLOSE 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("close_params",2, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // open_param ::= PARAMETRO NOMBRE EQUALS 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("open_param",3, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // close_param ::= OPEN FINISHER PARAMETRO CLOSE 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("close_param",4, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // close_action ::= OPEN FINISHER ACCION CLOSE 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("close_action",63, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // close_action_w ::= FINISHER ACCION CLOSE 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("close_action_w",64, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // data ::= DATE_TKN 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("data",5, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // data ::= IDENTIFIER 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("data",5, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // data ::= COLOR 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("data",5, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // data ::= INTEGER_TKN 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("data",5, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // data ::= STRING_TKN 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("data",5, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // data ::= types_align 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("data",5, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // data ::= NAV_INPUT 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("data",5, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // need_id_record ::= USUARIO_CREACION 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("need_id_record",6, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // need_id_record ::= USUARIO_MODIFICACION 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("need_id_record",6, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // need_date_record ::= FECHA_CREACION 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("need_date_record",7, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // need_date_record ::= FECHA_MODIFICACION 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("need_date_record",7, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // record_params ::= need_id_record CLOSE IDENTIFIER close_param 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("record_params",8, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // record_params ::= need_date_record CLOSE DATE_TKN close_param 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("record_params",8, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // id_param ::= ID CLOSE IDENTIFIER close_param 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("id_param",9, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // title_param ::= TITULO CLOSE data close_param 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("title_param",10, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // site_param ::= SITIO CLOSE IDENTIFIER close_param 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("site_param",11, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // father_param ::= PADRE CLOSE IDENTIFIER close_param 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("father_param",12, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // page_specification_p ::= PAGINA CLOSE IDENTIFIER close_param 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("page_specification_p",19, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // name_class ::= TITULO_CLASS 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("name_class",17, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // name_class ::= PARRAFO 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("name_class",17, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // name_class ::= IMAGEN 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("name_class",17, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // name_class ::= VIDEO 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("name_class",17, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // name_class ::= MENU 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("name_class",17, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // clase_param ::= CLASE CLOSE name_class close_param 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("clase_param",18, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // optional_labels ::= labels OPEN 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("optional_labels",31, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // optional_labels ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("optional_labels",31, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // labels ::= ETIQUETAS CLOSE OPEN define_labels FINISHER ETIQUETAS CLOSE 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("labels",13, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-6)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // define_labels ::= ETIQUETA VALOR EQUALS IDENTIFIER FINISHER CLOSE OPEN define_labels 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("define_labels",14, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-7)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // define_labels ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("define_labels",14, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // close_attributes ::= FINISHER ATRIBUTOS CLOSE 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("close_attributes",15, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // open_attr ::= ATRIBUTO NOMBRE EQUALS 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("open_attr",59, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // close_attr ::= OPEN FINISHER ATRIBUTO CLOSE 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("close_attr",60, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // text_attr ::= TEXTO CLOSE data close_attr 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("text_attr",16, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // types_align ::= CENTRAR 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("types_align",20, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // types_align ::= IZQUIERDA 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("types_align",20, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // types_align ::= DERECHA 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("types_align",20, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // types_align ::= JUSTIFICAR 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("types_align",20, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // align_attr ::= ALINEACION CLOSE types_align close_attr 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("align_attr",21, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // color_attr ::= COLOR CLOSE COLOR_HEX close_attr 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("color_attr",22, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // origin_attr ::= ORIGEN CLOSE STRING_TKN close_attr 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("origin_attr",23, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // numeric_attr_name ::= ALTURA 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("numeric_attr_name",24, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // numeric_attr_name ::= ANCHO 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("numeric_attr_name",24, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // numeric_attr ::= numeric_attr_name CLOSE INTEGER_TKN close_attr 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("numeric_attr",25, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // labels_attr ::= ETIQUETAS_MENU CLOSE for_menu close_attr 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("labels_attr",26, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // for_menu ::= IDENTIFIER 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("for_menu",65, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // for_menu ::= NAV_INPUT 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("for_menu",65, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // optional_attributes ::= attributes OPEN 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("optional_attributes",27, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // optional_attributes ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("optional_attributes",27, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // attributes ::= ATRIBUTOS CLOSE OPEN define_attributes close_attributes 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("attributes",28, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-4)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // define_attributes ::= open_attr define_attr_aux 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("define_attributes",29, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // define_attributes ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("define_attributes",29, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // define_attr_aux ::= text_attr OPEN define_attributes 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("define_attr_aux",30, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // define_attr_aux ::= align_attr OPEN define_attributes 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("define_attr_aux",30, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // define_attr_aux ::= color_attr OPEN define_attributes 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("define_attr_aux",30, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // define_attr_aux ::= origin_attr OPEN define_attributes 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("define_attr_aux",30, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // define_attr_aux ::= numeric_attr OPEN define_attributes 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("define_attr_aux",30, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // define_attr_aux ::= labels_attr OPEN define_attributes 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("define_attr_aux",30, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // define_attr_aux ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("define_attr_aux",30, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // instruction ::= OPEN instruction_aux 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("instruction",32, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // instruction_aux ::= actions_stm 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("instruction_aux",33, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // instruction_aux ::= action_specific 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("instruction_aux",33, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // actions_stm ::= ACCIONES CLOSE OPEN more_actions FINISHER ACCIONES CLOSE 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("actions_stm",34, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-6)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // more_actions ::= action_specific more_actions_aux 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("more_actions",35, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // more_actions ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("more_actions",35, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // more_actions_aux ::= OPEN more_actions 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("more_actions_aux",36, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // action_specific ::= ACCION NOMBRE EQUALS action_stm 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("action_specific",37, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-3)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // action_stm ::= new_site 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("action_stm",38, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // action_stm ::= delete_site 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("action_stm",38, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // action_stm ::= new_page 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("action_stm",38, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // action_stm ::= delete_page 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("action_stm",38, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // action_stm ::= modify_page 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("action_stm",38, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // action_stm ::= add_component 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("action_stm",38, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // action_stm ::= delete_component 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("action_stm",38, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // action_stm ::= modify_component 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("action_stm",38, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // new_site ::= NUEVO_SITIO_WEB CLOSE open_params OPEN params_new_site close_params close_action 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("new_site",39, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-6)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // params_new_site ::= open_param params_new_site_aux 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_new_site",40, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // params_new_site ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_new_site",40, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // params_new_site_aux ::= id_param OPEN params_new_site 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_new_site_aux",41, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // params_new_site_aux ::= record_params OPEN params_new_site 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_new_site_aux",41, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // delete_site ::= BORRAR_SITIO_WEB CLOSE OPEN params_delete_site close_action 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("delete_site",42, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-4)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // params_delete_site ::= open_params_w OPEN open_param id_param OPEN close_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_delete_site",61, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-5)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // params_delete_site ::= open_param id_param 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_delete_site",61, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // new_page ::= NUEVA_PAGINA CLOSE OPEN optional_labels open_params_w OPEN params_new_page close_params OPEN optional_labels close_action_w 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("new_page",43, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-10)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // params_new_page ::= open_param params_new_page_aux 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_new_page",44, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // params_new_page ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_new_page",44, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // params_new_page_aux ::= id_param OPEN params_new_page 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_new_page_aux",45, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // params_new_page_aux ::= title_param OPEN params_new_page 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_new_page_aux",45, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // params_new_page_aux ::= site_param OPEN params_new_page 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_new_page_aux",45, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // params_new_page_aux ::= father_param OPEN params_new_page 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_new_page_aux",45, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // params_new_page_aux ::= record_params OPEN params_new_page 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("params_new_page_aux",45, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // delete_page ::= BORRAR_PAGINA CLOSE OPEN delete_page_params close_action 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("delete_page",46, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-4)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // delete_page_params ::= open_params_w OPEN open_param id_param OPEN close_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("delete_page_params",62, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-5)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // delete_page_params ::= open_param id_param 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("delete_page_params",62, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // modify_page ::= MODIFICAR_PAGINA CLOSE OPEN optional_labels open_params_w OPEN modify_params close_params OPEN optional_labels close_action_w 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("modify_page",47, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-10)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // modify_params ::= open_param modify_params_aux 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("modify_params",48, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // modify_params ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("modify_params",48, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // modify_params_aux ::= id_param OPEN modify_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("modify_params_aux",49, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // modify_params_aux ::= title_param OPEN modify_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("modify_params_aux",49, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // add_component ::= AGREGAR_COMPONENTE CLOSE OPEN optional_attributes open_params_w OPEN add_comp_params close_params OPEN optional_attributes close_action_w 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("add_component",50, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-10)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // add_comp_params ::= open_param add_comp_params_aux 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("add_comp_params",51, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // add_comp_params ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("add_comp_params",51, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // add_comp_params_aux ::= id_param OPEN add_comp_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("add_comp_params_aux",52, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // add_comp_params_aux ::= page_specification_p OPEN add_comp_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("add_comp_params_aux",52, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // add_comp_params_aux ::= clase_param OPEN add_comp_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("add_comp_params_aux",52, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // delete_component ::= BORRAR_COMPONENTE CLOSE open_params OPEN delete_comp_params close_params close_action 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("delete_component",53, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-6)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // delete_comp_params ::= open_param delete_comp_params_aux 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("delete_comp_params",54, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // delete_comp_params ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("delete_comp_params",54, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // delete_comp_params_aux ::= id_param OPEN delete_comp_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("delete_comp_params_aux",55, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // delete_comp_params_aux ::= page_specification_p OPEN delete_comp_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("delete_comp_params_aux",55, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // modify_component ::= MODIFICAR_COMPONENTE CLOSE OPEN optional_attributes open_params_w OPEN modify_comp_params close_params OPEN optional_attributes close_action_w 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("modify_component",56, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-10)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // modify_comp_params ::= open_param modify_comp_params_aux 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("modify_comp_params",57, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-1)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // modify_comp_params ::= 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("modify_comp_params",57, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // modify_comp_params_aux ::= id_param OPEN modify_comp_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("modify_comp_params_aux",58, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // modify_comp_params_aux ::= page_specification_p OPEN modify_comp_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("modify_comp_params_aux",58, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // modify_comp_params_aux ::= clase_param OPEN modify_comp_params 
            {
              Object RESULT =null;

              CUP$XMLparser$result = parser.getSymbolFactory().newSymbol("modify_comp_params_aux",58, ((java_cup.runtime.Symbol)CUP$XMLparser$stack.elementAt(CUP$XMLparser$top-2)), ((java_cup.runtime.Symbol)CUP$XMLparser$stack.peek()), RESULT);
            }
          return CUP$XMLparser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$XMLparser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$XMLparser$do_action(
    int                        CUP$XMLparser$act_num,
    java_cup.runtime.lr_parser CUP$XMLparser$parser,
    java.util.Stack            CUP$XMLparser$stack,
    int                        CUP$XMLparser$top)
    throws java.lang.Exception
    {
              return CUP$XMLparser$do_action_part00000000(
                               CUP$XMLparser$act_num,
                               CUP$XMLparser$parser,
                               CUP$XMLparser$stack,
                               CUP$XMLparser$top);
    }
}

}
